name: app-build

on: 
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - helm/*

jobs:

  build:
    runs-on: ubuntu-latest  #

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Install dependencies
    - name: Install dependencies
      run: |
        npm install

     # Run tests
     #- name: Run tests
     # run: |
     #   npm run test
        


  code-analysis:
    runs-on: ubuntu-latest  #
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Install dependencies
    #- name: Install dependencies
    #  run: |
    #    npm install
    #    npm install eslint --save-dev  # Ensure ESLint is installed

    # Run static code analysis (ESLint)
    # - name: Run static code analysis (ESLint)
    #  run: |
    #    npx eslint . --ext .js,.jsx,.ts,.tsx
    
    - name: Scan for secrets
      uses: zricethezav/gitleaks-action@v1
      with:
        args: --no-git --path=./ 

    # Step : SonarQube Analysis (SonarCloud or SonarQube instance)



  build-push:
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kubestuff:{{github.run_id}} esnet_webapp/

    # Push Docker image to DockerHub
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/kubestuff:{{github.run_id}}



  helmupdate:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{secrets.GIT_TOKEN}} 
      
    - name: update the image tag
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/esnet-demo-chart_v1/values.yaml


    - name: commit changes
      run: |
        git config --global user.email "hadoopbhanu@gmail.com"
        git config --global user.name "Bhanu Koduri"
        git add helm/esnet-demo-chart_v1/values.yaml
        git commit -m "image tag updated"
        git push --force


  # Clean up Docker images
    - name: Clean up Docker images
      run: |
        docker system prune -af

















